{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","images","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipies","console","log","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2PAsBeA,EApBA,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAClC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,uBAAK,uBACL,6BAAKN,IACL,4BAAIC,IACJ,6BACKE,EAAYI,KAAI,SAAAC,GAAU,OACtB,6BAAKA,EAAWC,YAIzB,uBAAK,uBACL,qBAAKL,UAAWC,IAAMK,OAAQC,IAAKT,EAAOU,IAAKZ,IAC/C,uBACA,2BCqCGa,EAlDH,WAEV,IAFc,EAIiBC,mBAAS,IAJ1B,mBAIPC,EAJO,KAIGC,EAJH,OAKeF,mBAAS,IALxB,mBAKPG,EALO,KAKEC,EALF,OAMaJ,mBAAS,IANtB,mBAMPK,EANO,KAMCC,EAND,KAOdC,qBAAU,WACRC,IACAC,QAAQC,IAAI,wBACZ,CAACL,IACH,IAAMG,EAAW,uCAAG,8BAAAG,EAAA,sEACKC,MAAM,mCAAD,OAAoCP,EAApC,mBAVf,WAUe,oBATd,qCAQI,cACZQ,EADY,gBAEAA,EAASC,OAFT,OAEZC,EAFY,OAGlBb,EAAWa,EAAKC,MAHE,2CAAH,qDAgBf,OACE,sBAAK1B,UAAU,MAAf,UACA,yCACA,uBAAM2B,SARS,SAAAC,GACfA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKiBd,UAAU,aAArC,UACE,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOlB,EAAQmB,SAbxC,SAAAJ,GACnBd,EAAUc,EAAEK,OAAOF,UAajB,wBAAQ/B,UAAU,gBAAgB8B,KAAK,SAAvC,uBAEF,qBAAK9B,UAAU,WAAf,SACGW,EAAQR,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBC,MAASI,EAAOA,OAAOJ,MACvBC,YAAeG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,gBC7BhBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,0B","file":"static/js/main.fbdef645.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\nconst Recipe = ({title,calories,image,ingredients})=>{\r\n    return (\r\n        <div className={style.recipe}>\r\n            <br/><br/>\r\n            <h1>{title}</h1>\r\n            <p>{calories}</p>\r\n            <ol>\r\n                {ingredients.map(ingredient=>(\r\n                     <li>{ingredient.text}</li>\r\n                ))}\r\n               \r\n            </ol>\r\n            <br/><br/>\r\n            <img className={style.images} src={image} alt={title}/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Recipe;","import React,{useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport Recipe from './Recipe';\n\nconst App = ()=>{\n\n  const APP_ID = \"dd896c94\";\n  const APP_KEY = \"e8d527bd4a4560d2a0fe199136c496c3\"\n  const [recipes , setRecipes] = useState([]); \n  const [search , setSearch] = useState('');\n  const [query , setQuery] = useState('')\n  useEffect(()=>{\n    getRecipies();\n    console.log('Effect is running ')\n  },[query]);\n  const getRecipies = async()=>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data =await response.json();\n    setRecipes(data.hits) \n    // console.log(data.hits)\n    };\n\n    const updateSearch = e =>{\n      setSearch(e.target.value);//wil take input\n    }\n\n    const getSearch= e =>{\n      e.preventDefault();\n      setQuery(search)\n      setSearch('');\n    }\n    return(\n      <div className=\"App\">\n      <h1>Weclome</h1>\n      <form onSubmit={getSearch} className=\"seach-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"search-button\" type=\"submit\" >Search</button>\n      </form>\n      <div className=\"recipies\">\n        {recipes.map(recipe=>(\n          <Recipe\n          key = {recipe.recipe.label} \n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories}\n          image = {recipe.recipe.image}\n          ingredients = {recipe.recipe.ingredients}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n// const Example = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n// const [counter , setCounter] = useState(0);\n// useEffect(()=>{\n  //   console.log('Effect is running ')\n  // })  // this will runn everytime yoou rerender your page or referesh your page\n  \n  // {/* <h1  onClick={()=>setCounter(counter+1) }>{counter}</h1> */}\n  //[counter] it will only useeffect when counter changes\n  // ,[] by adding this it will only use effect run 1st time the page was rendered .","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__PFfJ3\",\"images\":\"recipe_images__27at8\"};"],"sourceRoot":""}